{"Name":"Satellite Menu","Id":1346,"Alias":"satellite-menu","Description":"`SatelliteMenu` is an unobtrusive button that smoothly expands to a radial \u0027satellite\u0027 menu when tapped.\nThis control was popularized in Path\u0027s iOS app.\n\nTo setup a `SatelliteMenu` on iOS (be sure to add your own menu image resources first):\n\n```csharp\nusing SatelliteMenu;\nusing System.Drawing;\n...\n\npublic override void ViewDidLoad ()\n{\n\tbase.ViewDidLoad ();\n\t\n\tvar image = UIImage.FromFile (\"menu.png\");\n\tvar yPos = View.Frame.Height - image.Size.Height - 10;\n\tvar frame = new RectangleF (10, yPos, image.Size.Width, image.Size.Height);\n\n\tvar items = new [] { \n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon1.png\"), 1, \"Search\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon2.png\"), 2, \"Update\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon3.png\"), 3, \"Share\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon4.png\"), 4, \"Post\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon5.png\"), 5, \"Reload\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon6.png\"), 6, \"Settingd\")\n\t};\n\n\tvar button = new SatelliteMenuButton (View, image, items, frame);\n\n\tbutton.MenuItemClick += (_, args) =\u003e {\n\t\tConsole.WriteLine (\"{0} was clicked!\", args.MenuItem.Name);\n\t};\n\n\tView.AddSubview (button);\n}\n```\n\n*An Android version of this component is coming very soon.*\n\n*Created by [IOS BITS LTD](http://iosbits.co.uk/new/).*\n","Version":"1.2.1.0","Summary":"An unobtrusive button that smoothly expands to a radial \u0027satellite\u0027 menu when tapped.","QuickStart":"`SatelliteMenu` is an unobtrusive button that smoothly expands to a radial \u0027satellite\u0027 menu when tapped. This control was popularized in Path\u0027s iOS app.\n\n## iOS Example\n\nTo setup a `SatelliteMenu` on iOS (be sure to add your own menu image resources first):\n\n```csharp\nusing SatelliteMenu;\nusing System.Drawing;\n...\n\npublic override void ViewDidLoad ()\n{\n\tbase.ViewDidLoad ();\n\n\tvar image = UIImage.FromFile (\"menu.png\");\n\tvar yPos = View.Frame.Height - image.Size.Height - 10;\n\tvar frame = new RectangleF (10, yPos, image.Size.Width, image.Size.Height);\n\n\tvar items = new [] { \n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon1.png\"), 1, \"Search\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon2.png\"), 2, \"Update\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon3.png\"), 3, \"Share\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon4.png\"), 4, \"Post\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon5.png\"), 5, \"Reload\"),\n\t\tnew SatelliteMenuButtonItem (UIImage.FromFile (\"icon6.png\"), 6, \"Settingd\")\n\t};\n\n\tvar button = new SatelliteMenuButton (View, image, items, frame);\n\n\tbutton.MenuItemClick += (_, args) =\u003e {\n\t\tConsole.WriteLine (\"{0} was clicked!\", args.MenuItem.Name);\n\t};\n\n\tView.AddSubview (button);\n}\n```\n\n## Android Example\n\nTo setup a `SatelliteMenu` on Android (be sure to add your own menu image resources first):\n\n```csharp\nusing SatelliteMenu;\n...\n\nprotected override void OnCreate (Bundle bundle)\n{\n    base.OnCreate (bundle);\n    SetContentView (Resource.Layout.Main);\n\n    var button = FindViewById\u003cSatelliteMenuButton\u003e (Resource.Id.menu);\n\n    button.AddItems (new [] {\n        new SatelliteMenuButtonItem (1, Resource.Drawable.icon1),\n        new SatelliteMenuButtonItem (2, Resource.Drawable.icon2),\n        new SatelliteMenuButtonItem (3, Resource.Drawable.icon3),\n        new SatelliteMenuButtonItem (4, Resource.Drawable.icon4),\n        new SatelliteMenuButtonItem (5, Resource.Drawable.icon5),\n        new SatelliteMenuButtonItem (6, Resource.Drawable.icon6)\n    });\n\n    button.MenuItemClick += (sender, e) =\u003e {\n        Console.WriteLine (\"{0} selected\", e.MenuItem);\n    };\n}\n```\n\nAnd in the layot file\n\n```xml\n...\n\u003csatellitemenu.SatelliteMenuButton\n    pop:speed=\"250\"\n    pop:radius=\"200dp\"\n    android:id=\"@+id/menu\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"bottom|left\"\n    android:layout_margin=\"8dp\"\u003e\n    \u003cImageView\n        android:id=\"@+id/popoutMenu\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:src=\"@drawable/menu\"\n        android:layout_gravity=\"bottom|left\"\n        android:contentDescription=\"@string/empty\" /\u003e\n\u003c/satellitemenu.SatelliteMenuButton\u003e\n...\n```\n\n## Customization\n\n`SatelliteMenuButton` has several customizable properties:\n\n* `Radius`: distance of button items from the main menu button.\n* `Speed`: speed of the expand/collapse animation.\n* `Bounce`: the value of bounce effect.\n* `BounceSpeed`: bounce speed.\n* `RotateToSide`: whether to rotate to side when pressed. Useful for round menu buttons--for example, \"+\" becomes \"x\" when opened.\n* `CloseItemsOnClick`: whether to close items when clicked.\n","Hash":"82ec9f17bc192a7171495b1364648766","TargetPlatforms":["ios","ios-unified","android"],"TrialHash":null}